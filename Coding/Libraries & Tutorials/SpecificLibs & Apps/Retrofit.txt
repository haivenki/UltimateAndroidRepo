https://www.reddit.com/r/androiddev/comments/3iisfv/how_do_you_guys_switch_between_your_api_endpoints/
http://square.github.io/retrofit/
https://github.com/florent37/TutosAndroidFrance/tree/master/RetrofitSample
http://themakeinfo.com/2015/04/retrofit-android-tutorial/

Retrofit 2.0
http://inthecheesefactory.com/blog/retrofit-2.0/en
I have to change my error handling strategy, but I think it's good for clarity.
I used to parse the throwable error by checking if it's an instance of RetrofitError, and by calling getBodyAs(MyErrorObject.class).
Now, failure comes in onResponse, and I just have to call isSuccess(), and if it's false, I parse the errorBody like:
ErrorMessage errorMessage = new Gson().fromJson(response.errorBody().string(), ErrorMessage.class);
do you think there is a better way, knowing I'd like to print a toast with the errorMessage.message for each call ?
http://mattlogan.me/notes-on-updating-to-retrofit-2.html
https://speakerdeck.com/jakewharton/simple-http-with-retrofit-2-droidcon-nyc-2015
https://github.com/ryee1/NoSleepReader
https://futurestud.io/blog/retrofit-2-upgrade-guide-from-1-9/
https://medium.com/@shelajev/how-to-make-http-calls-on-android-with-retrofit-2-cfc4a67c6254#.3k4oddfis
https://medium.com/@sasa_sekulic/quick-and-easy-guide-to-retrofit-2-0-setup-or-migration-with-rxjava-ab7a11bc17df#.fkext65b7

Testing
http://riggaroo.co.za/mocking-api-responses-using-a-retrofit-client-in-android/
http://riggaroo.co.za/retrofit-2-mocking-http-responses/

With other libs
https://nullpointer.wtf/android/using-retrofit-realm-parceler/